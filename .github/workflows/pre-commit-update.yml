name: Pre-Commit update

permissions:
  contents: read

on:
  workflow_call:
  workflow_dispatch:
  schedule:
    - cron: '0 1 1-7 * 1' # this means every 1st Monday of every month

jobs:
  update:
    name: "Update Pre-Commit dependencies"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: install Python requirements
        shell: bash
        run: python -m pip install pyyaml==6.0 requests==2.31

      - name: run the update script
        shell: python
        run: | 
          from os import environ
          import yaml
          import requests

          pre_commit_config_path = "./.pre-commit-config.yaml"

          with open(pre_commit_config_path, "r") as pre_commit:
              try:
                  pre_commit_config = yaml.safe_load(pre_commit)
              except yaml.YAMLError as exc:
                  print(exc)
                  exit(1)
          
          for repo in pre_commit_config['repos']:
              repo_url = repo['repo'].replace('.git','') if '.git' in repo['repo'] else repo['repo']
              release = repo['rev']
              headers = {'Accept': 'application/json'}
              resp = requests.get(f"{repo_url}/refs?type=tag", headers=headers)
              if resp.status_code == requests.codes.ok:
                  latest_release = resp.json()['refs'][0]
                  if release != latest_release:
                      print(f'{repo_url} needs to be updated to {latest_release}, currently at {release}')
                      repo['rev'] = latest_release
              
          with open(pre_commit_config_path, 'w') as pre_commit:
              yaml.dump(pre_commit_config, pre_commit, default_flow_style=False)

      - name: install pre-commit dependencies
        if: github.event_name != 'workflow_call'
        working-directory: /tmp
        run: |
          curl -sL https://github.com/terraform-docs/terraform-docs/releases/download/v0.16.0/terraform-docs-v0.16.0-linux-amd64.tar.gz > terraform-docs.tar.gz 
          tar zxf terraform-docs.tar.gz
          mv terraform-docs /usr/local/bin/
          terraform-docs --version

          curl -sL https://github.com/terraform-linters/tflint/releases/download/v0.46.0/tflint_linux_amd64.zip > tflint.zip
          unzip tflint.zip
          mv tflint /usr/local/bin/
          tflint --version

      - name: run pre-commit with updated config
        if: github.event_name != 'workflow_call'
        shell: bash
        run: | 
          python -m pip install pre-commit==3.3
          pre-commit run -a

      - name: create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          add-paths: .pre-commit-config.yaml
          branch: pre-commit-dependencies-update
          commit-message: "[chore] pre-commit-dependencies-update"
          title: "[chore] pre-commit-dependencies-update"
