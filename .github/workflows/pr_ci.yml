name: PR CI

permissions:
  contents: read

on:
  workflow_call:

jobs:
  # pre-commit:
  #   name: Pre-Commit framework
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v3
  #     - name: run pre-commit
  #       uses: ./.github/actions/pre_commit

  # checkov:
  #   name: Scan Terraform code with Checkov
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v3
  #     - name: run checkov
  #       uses: ./.github/actions/checkov


  # tf_prereqs:
  #   name: terraform modules discovery
  #   runs-on: ubuntu-latest
  #   outputs:
  #     validate_paths: ${{ steps.format.outputs.dir_diff }}
  #     plan_paths: ${{ steps.deps.outputs.examples }}
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: get diff with base branch
  #       id: diff
  #       uses: tj-actions/changed-files@v31
  #       with:
  #         separator: "\n"
  #         files: |
  #           modules/**/*.tf
  #           examples/**/*.tf

  #     - name: extract only changed folders
  #       id: format
  #       env:
  #         DIFFS: ${{ steps.diff.outputs.all_changed_files }}
  #       run: |
  #         echo "::set-output name=dir_diff::$(echo -n "$DIFFS" | sed -E "s/^(modules|examples)\/(.+)\/.*$/\1\/\2/"  | tr '\n' ',')"

  #     - name: discover module->example dependencies
  #       id: deps
  #       env:
  #         DIFFS: ${{ steps.format.outputs.dir_diff }}
  #       shell: bash
  #       run: |
  #         if [ "$DIFFS" ]; then
  #           EXAMPLES_DISCOVERY=$(for M in $(echo "$DIFFS" | tr ',' '\n' | grep modules); do
  #             echo $(grep -rl "$M" examples/*/*.tf | sed -E "s/^(examples\/.*)\/.*$/\1/g")
  #           done | sort -u | awk NF)

  #           EXAMPLES_COMBINED=$(echo "$(echo $EXAMPLES_DISCOVERY | tr ' ' ','),$DIFFS" | tr ',' '\n' | awk NF | grep examples | sort -u)

  #           echo "::set-output name=examples::$(echo -n $EXAMPLES_COMBINED | jq -R -s -c 'split(" ")')"
  #         fi
    

  validate:
    name: validate all changed modules
    # needs: [tf_prereqs]
    # if: ${{ needs.tf_prereqs.outputs.validate_paths != '' }}
    uses: ./.github/workflows/_tf_validate.yml
    with:
      tf_version: 0.15 1.0 1.1 1.2 1.3
      paths: ${{ needs.tf_prereqs.outputs.validate_paths }}


  # plan:
  #   name: '${{ matrix.path }}@${{ matrix.tf_version }}'
  #   needs: [tf_prereqs]
  #   if: ${{ needs.tf_prereqs.outputs.plan_paths != '' }}
  #   strategy:
  #     matrix:
  #       path: ${{ fromJson(needs.tf_prereqs.outputs.plan_paths) }}
  #       tf_version:
  #         # - '0.15'
  #         # - '1.0'
  #         # - '1.1'
  #         - '1.2'
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     id-token: write
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v3

  #     - name: run plan
  #       uses: ./.github/actions/tf_plan
  #       env:
  #         ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  #         ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #         ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  #         ARM_USE_OIDC: true
  #       with:
  #         path: ${{ matrix.path }}
  #         tf_version: ${{ matrix.tf_version }}
  #         # tf_version: '1.2'

  # branch_protection_junction:
  #   name: junction point for branch protection
  #   needs:
  #     - validate
  #     - pre-commit
  #     - checkov
  #     # - plan
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: branch protection check validation point
  #       run: echo OK
